# 数据源 test0,test1,test2
sharding.jdbc.datasource.names=test0,test1,test2
# 第一个数据库
sharding.jdbc.datasource.test0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.test0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.test0.jdbc-url=jdbc:mysql://127.0.0.1:3306/test0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
sharding.jdbc.datasource.test0.username=root
sharding.jdbc.datasource.test0.password=123456

# 第二个数据库
sharding.jdbc.datasource.test1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.test1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.test1.jdbc-url=jdbc:mysql://127.0.0.1:3306/test1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
sharding.jdbc.datasource.test1.username=root
sharding.jdbc.datasource.test1.password=123456

# 第三个数据库
sharding.jdbc.datasource.test2.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.test2.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.test2.jdbc-url=jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
sharding.jdbc.datasource.test2.username=root
sharding.jdbc.datasource.test2.password=123456

# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=test$->{id % 3}

# 分表策略 其中car为逻辑表 分表主要取决于id行
sharding.jdbc.config.sharding.tables.t_car.actual-data-nodes=test$->{0..2}.t_car_$->{0..1}
sharding.jdbc.config.sharding.tables.t_car.table-strategy.inline.sharding-column=count
# 分片算法表达式
sharding.jdbc.config.sharding.tables.t_car.table-strategy.inline.algorithm-expression=t_car_$->{count % 2}

# 主键 UUID 18位数 如果是分布式还要进行一个设置 防止主键重复
#sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id

# 打印执行的数据库以及语句
sharding.jdbc.config.props..sql.show=true
logging.level.com.lee.sharding.jdbc.demo.mapper=debug
spring.main.allow-bean-definition-overriding=true

#读写分离
sharding.jdbc.datasource.dsmaster =

server.port=8081